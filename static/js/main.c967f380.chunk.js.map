{"version":3,"sources":["components/login/login.jsx","components/register/register.jsx","components/common/tableComponent.jsx","components/common/navbar.jsx","components/logout/logout.jsx","components/HOC/protectedRoutes.js","App.js","serviceWorker.js","index.js"],"names":["Login","props","id","name","className","initialValues","remember","onFinish","values","entry","localStorage","getItem","entryJson","JSON","parse","storageUsername","email","storagePassword","password","username","setItem","toast","error","history","push","Item","rules","required","message","prefix","UserOutlined","placeholder","LockOutlined","type","valuePropName","noStyle","href","htmlType","to","Option","Select","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","Register","Form","useForm","form","prefixSelector","style","width","value","stringify","scrollToFirstError","label","title","QuestionCircleOutlined","whitespace","hasFeedback","Password","dependencies","getFieldValue","validator","rule","Promise","reject","resolve","addonBefore","TableComponent","useState","show","setShow","loading","setLoading","setName","setEmail","phone","setPhone","setPassword","useEffect","setTimeout","getDetails","allValues","getValues","nickname","data","key","password1","columns","dataIndex","dataSource","size","onClick","Header","Layout","Content","Footer","Navbar","Modal","content","theme","mode","defaultSelectedKeys","color","fontWeight","fontSize","padding","margin","textAlign","Logout","clear","Fragment","ProtectedRoutes","state","Component1","this","component","pathname","Component","App","path","exact","from","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.c967f380.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport {toast} from 'react-toastify';\r\nimport {Link} from \"react-router-dom\"\r\nimport \"./login.scss\";\r\n\r\n// React Toastify Error \r\nconst error=()=>{\r\n  toast.error (\"Please Correct your Information\");\r\n}\r\n\r\n// Login Component Start from here \r\nconst Login = (props) => {\r\n  const onFinish = (values) => {\r\n    let entry=localStorage.getItem('values');   /*  Fetching data from local storage */\r\n    let entryJson=JSON.parse(entry);\r\n\r\n    let storageUsername=entryJson.email;\r\n    let storagePassword=entryJson.password;\r\n\r\n// Validate registered User \r\n  \r\n      values.username===storageUsername && values.password===storagePassword ? localStorage.setItem('auhenticate',true): error();\r\n    \r\n    values.username===storageUsername && values.password===storagePassword && props.history.push('/')\r\n    \r\n\r\n    }\r\n  return ( \r\n    /*  Login Form Start here*/\r\n\r\n    <div id='loginForm'>\r\n  <Form\r\n    name=\"normal_login\"\r\n    className=\"login-form\"\r\n    initialValues={{\r\n      remember: true,\r\n    }}\r\n    onFinish={onFinish} >\r\n\r\n    <Form.Item\r\n      name=\"username\"\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: 'Please input your Username!',\r\n        },\r\n      ]} \r\n    >\r\n      <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\r\n    </Form.Item>\r\n    <Form.Item\r\n      name=\"password\"\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: 'Please input your Password!',\r\n        },\r\n      ]}    \r\n    >\r\n      <Input\r\n        prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n      />\r\n    </Form.Item>\r\n    <Form.Item>\r\n      <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n        <Checkbox >Remember me</Checkbox>\r\n      </Form.Item>\r\n\r\n      <a className=\"login-form-forgot\" href=\"/\">\r\n        Forgot password\r\n      </a>\r\n    </Form.Item>\r\n    <Form.Item>\r\n      <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n       Log in\r\n      </Button>\r\n      Or <Link to=\"./register\">register now!</Link>\r\n    </Form.Item>\r\n  </Form>\r\n      </div>\r\n   );\r\n}\r\n \r\nexport default Login;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {\r\n    Form, \r\n    Input,\r\n    Tooltip,\r\n    Select,\r\n    Button,\r\n  } from 'antd';\r\n  import { QuestionCircleOutlined } from '@ant-design/icons';\r\n  import \"./register.scss\";\r\n\r\n\r\n  const { Option } = Select;\r\n  const formItemLayout = {\r\n    labelCol: {\r\n      xs: { span: 24 },\r\n      sm: { span: 8 },\r\n    },\r\n    wrapperCol: {\r\n      xs: { span: 24 },\r\n      sm: { span: 16 },\r\n    },\r\n  };\r\n  const tailFormItemLayout = {\r\n    wrapperCol: {\r\n      xs: {\r\n        span: 24,\r\n        offset: 0,\r\n      },\r\n      sm: {\r\n        span: 16,\r\n        offset: 8,\r\n      },\r\n    },\r\n  };\r\n\r\n// Registration page start from here \r\n\r\n\r\nconst Register = (props) => {\r\n    const [form] = Form.useForm();\r\n\r\n\r\n    // Putting all data on Local storage \r\n    const onFinish = values => {\r\n      localStorage.setItem(\"values\",JSON.stringify(values));\r\n      localStorage.setItem('auhenticate',\"\");\r\n      props.history.push('./login');\r\n    };\r\n  \r\n    const prefixSelector = (\r\n        \r\n      <Form.Item name=\"prefix\" noStyle>\r\n        <Select style={{ width: 70 }}>\r\n          <Option value=\"86\">+92</Option>\r\n          <Option value=\"87\">+91</Option>\r\n        </Select>\r\n      </Form.Item>\r\n    );\r\n  \r\n    return ( \r\n    <div id=\"myForm\">\r\n    \r\n    <Form\r\n      {...formItemLayout}\r\n      form={form}\r\n      name=\"register\"\r\n      onFinish={onFinish}\r\n      scrollToFirstError\r\n    >\r\n\r\n    <Form.Item\r\n        name=\"nickname\"\r\n        label={\r\n          <span>\r\n            Name&nbsp;\r\n            <Tooltip title=\"Your Origional Name\">\r\n              <QuestionCircleOutlined />\r\n            </Tooltip>\r\n          </span>\r\n        }\r\n        rules={[{ required: true, message: 'Please input your Name!', whitespace: true }]}\r\n      >\r\n    <Input/>\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"email\"\r\n        label=\"E-mail\"\r\n        rules={[\r\n          {\r\n            type: 'email',\r\n            message: 'The input is not valid E-mail!',\r\n          },\r\n          {\r\n            required: true,\r\n            message: 'Please input your E-mail!',\r\n          },\r\n        ]}\r\n      >\r\n    <Input/>\r\n    </Form.Item>\r\n      <Form.Item\r\n        name=\"password\"\r\n        label=\"Password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your password!',\r\n          },\r\n        ]}\r\n        hasFeedback\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n\r\n      <Form.Item\r\n        name=\"confirm\"\r\n        label=\"Confirm Password\"\r\n        dependencies={['password']}\r\n        hasFeedback\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please confirm your password!',\r\n          },\r\n          ({ getFieldValue }) => ({\r\n            validator(rule, value) {\r\n              if (!value || getFieldValue('password') === value) {\r\n                return Promise.resolve();\r\n              }\r\n              return Promise.reject('The two passwords that you entered do not match!');\r\n            },\r\n          }),\r\n        ]}\r\n      > \r\n        <Input.Password />\r\n      </Form.Item>\r\n     \r\n\r\n      <Form.Item\r\n        name=\"phone\"\r\n        label=\"Phone Number\"\r\n        rules={[{ required: true, message: 'Please input your phone number!' }]}\r\n      >\r\n        <Input addonBefore={prefixSelector} style={{ width: '100%' }} />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"agreement\"\r\n        valuePropName=\"checked\"\r\n        \r\n        {...tailFormItemLayout}\r\n      >\r\n       \r\n          Do you have already Account! <Link to=\"./login\">Login</Link>\r\n       \r\n      </Form.Item>\r\n      <Form.Item {...tailFormItemLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Register\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n    </div> );\r\n}\r\n \r\nexport default Register;","import React,{useState,useEffect} from 'react';\r\nimport {BeatLoader} from 'react-spinners';\r\nimport { Button } from 'antd';\r\nimport { Table } from 'antd';\r\n\r\n// Table Components Start from here \r\nconst TableComponent = () => {\r\n\r\n  // All the state variables here \r\n  const [show,setShow]=useState(false);\r\n  const [loading,setLoading]=useState(false);\r\n  const [name,setName]=useState(\"\");\r\n  const [email,setEmail]=useState(\"\");\r\n  const [phone,setPhone]=useState(\"\");\r\n  const [password,setPassword]=useState(\"\");\r\n\r\n  useEffect(()=>{\r\n    if(loading){\r\n      setTimeout(() => {\r\n        setLoading(false)\r\n      }, 1500);\r\n    }\r\n  },[loading]);\r\n\r\nconst helloHandeler=()=>{\r\n    setLoading(!loading);\r\n    setTimeout(()=>{\r\n      setLoading(!loading);\r\n      setShow(!show);\r\n    },1500);\r\n    // Geting Data from Local storage \r\n    getDetails(); \r\n  };\r\n  if (loading) return <BeatLoader/>\r\n\r\n  const getDetails=()=>{\r\n    let allValues=localStorage.getItem('values');\r\n    let getValues=JSON.parse(allValues);\r\n    setName(getValues.nickname);\r\n    setEmail(getValues.email);\r\n    setPhone(getValues.phone);\r\n    setPassword(getValues.password);\r\n  \r\n\r\n  }\r\n\r\n  // Table Column Data \r\n    const columns = [\r\n        {\r\n          title: 'Name',\r\n          dataIndex: 'name',\r\n        },\r\n        {\r\n          title: 'Email',\r\n          dataIndex: 'email',\r\n        },\r\n        {\r\n          title: 'Phone',\r\n          dataIndex: 'phone',\r\n        },\r\n        {\r\n          title: 'Password',\r\n          dataIndex: 'password',\r\n        },\r\n      ];\r\n\r\n      // Fething Data From State \r\n      let data = [\r\n        {\r\n          key: '1',\r\n          name,\r\n          email,\r\n          phone,\r\n          password1: password,\r\n        },\r\n      ];\r\n      \r\n    return ( \r\n        <div>\r\n            <Table columns={columns} dataSource={data} size=\"small\" />\r\n            <Button type=\"primary\" onClick={helloHandeler}>View Details</Button>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default TableComponent;\r\n\r\n\r\n// Table Components End here ","import React from 'react';\r\nimport { Layout, Menu, Breadcrumb,Modal } from 'antd';\r\nimport TableComponent from './tableComponent';\r\nimport {Link} from \"react-router-dom\"\r\nimport \"./navbar.scss\"\r\n\r\n\r\nconst { Header, Content, Footer } = Layout;\r\n\r\n// Component Start from here \r\nconst Navbar = () => {\r\n\r\n\r\nconst error=()=> {\r\n    Modal.error({\r\n      title: 'Please Logout Before Access this Page',\r\n      content: \"You can't access this page before Logout\",\r\n    });\r\n  }\r\n\r\n  let values=localStorage.getItem('values');\r\n  let mName1=JSON.parse(values);\r\n\r\n    return ( \r\n    <div>\r\n  <Layout className=\"layout\">\r\n\r\n    {/* Header Area start from here  */}\r\n    <Header>\r\n      <div className=\"logo\" />\r\n      <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\r\n      <Menu.Item key=\"1\" style={{color:'white',fontWeight:'700', fontSize:'20px'}}>Azeem Aleem</Menu.Item>\r\n      <Menu.Item key=\"2\"><Link to=\"./\">Home</Link></Menu.Item>\r\n      <Menu.Item key=\"3\" onClick={error}> Login</Menu.Item>\r\n      <Menu.Item key=\"4\" onClick={error}>Register</Menu.Item>\r\n      <Menu.Item key=\"5\"><Link to=\"./logout\">Logout</Link></Menu.Item>\r\n\r\n      </Menu>\r\n    </Header>\r\n    <Content style={{ padding: '0 50px' }}>\r\n      <Breadcrumb style={{ margin: '16px 0' }}>\r\n        <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item>List</Breadcrumb.Item>\r\n        <Breadcrumb.Item>App</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n    <div className=\"site-layout-content\">\r\n    <TableComponent/>\r\n    \r\n\r\n    </div>\r\n    </Content>\r\n    {/* Footer Area   */}\r\n    <Footer style={{ textAlign: 'center' }}>©2020 Developed by Azeem Aleem </Footer>\r\n  </Layout>\r\n    </div>\r\n     );\r\n}\r\n \r\nexport default Navbar;\r\n\r\n// Componend End here ","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Button} from 'antd';\r\nimport './logout.scss';\r\nconst Logout = () => {\r\n    localStorage.clear(); /* Clear the data from local storage*/\r\n   \r\n    return ( <React.Fragment>\r\n\r\n        <div id=\"logout\">\r\n            <div className='text'>\r\n                YOU ARE LOGOUT NOW!\r\n                <div className='buttons'>\r\n                    <Button type=\"primary\" style={{margin:'1rem',width:'100px'}} ><Link to='/login'>Login</Link></Button>\r\n                    \r\n                    <Button type=\"primary\" style={{margin:'1rem',width:'100px'}} ><Link to=\"/register\" >Register</Link></Button>\r\n                </div>\r\n            </div>\r\n        </div>  \r\n    </React.Fragment> );\r\n}\r\n \r\nexport default Logout;","import React,{Component} from 'react';\r\nimport { Redirect} from 'react-router-dom';\r\n\r\n// Higher Order Component \r\nclass ProtectedRoutes extends Component {\r\n    state = {  }\r\n    render() { \r\n        const Component1=this.props.component;\r\n        const user=localStorage.getItem('auhenticate');\r\n\r\n// Transform the component and return back \r\n        return user?( <Component1/> ):(<Redirect to={{pathname:'/login'}}/>\r\n        );\r\n    }\r\n}\r\n \r\nexport default ProtectedRoutes;\r\n\r\n//  End here--","import React from 'react';\r\nimport Login from './components/login/login'\r\nimport {ToastContainer} from 'react-toastify';\r\nimport Register from './components/register/register';\r\nimport Navbar from \"./components/common/navbar\";\r\nimport {Switch,Route,Redirect} from \"react-router-dom\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Logout from \"./components/logout/logout\";\r\nimport ProtectedRoutes from './components/HOC/protectedRoutes';\r\n\r\nconst App = () => {\r\n  return ( \r\n    <React.Fragment>\r\n       <ToastContainer/>\r\n      <Switch>\r\n        <ProtectedRoutes path='/' component={Navbar} exact={true}/>\r\n        <Route path=\"/login\" component={Login}/>\r\n        <Route path=\"/register\" component={Register} />\r\n        <Route path=\"/logout\" component={Logout} />\r\n        <Redirect from='/' exact to=\"/navbar\"/>\r\n      </Switch> \r\n    </React.Fragment> );\r\n}\r\n \r\nexport default App;\r\n\r\n\r\n\r\n    \r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'core-js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n   <React.StrictMode>\n    <BrowserRouter basename={window.location.pathname || ''}>\n       <App />\n    </BrowserRouter>\n  </React.StrictMode>, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}